[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rag"
version = "0.1.0"
description = "A pre-configured Retrieval-Augmented Generation (RAG) pipeline with LangChain, ChromaDB and Sentence Transformers"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Pramesh Regmi", email = "prms.regmi@gmail.com"},
]
maintainers = [
    {name = "Pramesh Regmi", email = "prms.regmi@gmail.com"},
]
keywords = ["rag", "retrieval", "embedding", "chromadb", "langchain", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.12"
dependencies = [
    "chromadb>=0.5.23",
    "langchain-community>=0.3.8",
    "langchain-text-splitters>=0.3.8",
    "sentence-transformers>=2.0.0",
    "numpy>=1.21.0",
    "tqdm>=4.62.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.scripts]
rag-cli = "rag.cli:main"

[project.urls]
Homepage = "https://github.com/AgenticFSU/simple-rag"
Documentation = "https://github.com/AgenticFSU/simple-rag#readme"
Repository = "https://github.com/AgenticFSU/simple-rag.git"
Issues = "https://github.com/AgenticFSU/simple-rag/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "integration: marks tests as integration tests (require actual model loading)",
    "slow: marks tests as slow running",
    "unit: marks tests as unit tests (default)",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

ignore_missing_imports = true
